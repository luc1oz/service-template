server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: service-template
    public-prefix-path: ${SERVICE_TEMPLATE_PUBLIC_URL_PREFIX:/api/template}
    private-prefix-path: ${SERVICE_TEMPLATE_PRIVATE_URL_PREFIX:/template}
  datasource:
    url: ${SERVICE_TEMPLATE_DB_JDBC_URL:jdbc:postgresql://localhost:5432/template?currentSchema=public&user=postgres&password=postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc.lob.non_contextual_creation: true
    open-in-view: false
  liquibase:
    enabled: ${SERVICE_TEMPLATE_LIQUIBASE_ENABLED:false}
    change-log: classpath:db/changelog/master.xml

management:
  endpoint:
    env:
      keys-to-sanitize: spring.datasource.url, SERVICE_TEMPLATE_DB_JDBC_URL
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, env
      path-mapping:
        info: ${spring.application.public-prefix-path}/info
        health: /health
        env: ${spring.application.private-prefix-path}/env
      base-path: # сбрасывает дефолтнуй маппинг актуатора

info:
  application:
    version: '@project.version@'

logging:
  pattern:
    console: "${LOG_CONSOLE_PATTERN:%d{yyyy-MM-dd HH:mm:ss.SSS} %+5level --- [%+15.15thread] %-40.40logger{36} : %msg%n}"
  level:
    ROOT: INFO
    org.springframework: ${SERVICE_TEMPLATE_LOG_LEVEL_SPRING:INFO}

springdoc:
  packagesToScan: ru.template.controller
  api-docs:
    path: swagger/v3/api-docs
  swagger-ui:
    path: swagger-ui

feign:
  client:
    config:
      any-service:
        api-base-url: ${ANY_SERVICE_PRIVATE_URL_PREFIX:/any}
        url: ${ANY_SERVICE_HOST:http://localhost:8082}
      default:
        connectTimeout: ${FEIGN_CONNECT_TIMEOUT:5000}
        readTimeout: ${FEIGN_READ_TIMEOUT:5000}
        loggerLevel: ${FEIGN_LOGGER_LEVEL:full}